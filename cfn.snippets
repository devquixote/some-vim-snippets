snippet .skeleton
	AWSTemplateFormatVersion: "${1:2010-09-09}"

	Description: >
	  Write me

	Metadata:
	  # add metadata

	Parameters:
	  # add parameters

	Mappings:
	  # add mapping

	Conditions:
	  # add conditions

	Resources:
	  # add resources

	Outputs:
	  # add outputs

# Params
snippet .param
	${1:name}:
	  Type: TODO
	  Description: >
	    TODO
	  #Default: TODO
	  #AllowedValues:
	  #  - TODO

snippet .param-string
	${1:name}:
	  Type: String
	  Description: >
	    TODO
	  #Default: TODO
	  #MinLength: TODO
	  #MaxLength: TODO
	  #AllowedPattern: TODO
	  #AllowedValues:
	  #  - TODO

snippet .param-number
	${1:name}:
	  Type: Number
	  Description: >
	    TODO
	  #Default: TODO
	  #MinValue: TODO
	  #MaxValue: TODO
	  #AllowedValues:
	  #  - TODO

snippet .metadata
	${0:logical-id}:
	  Description: ${1:desc}

snippet .mapping
	${1:logical-id}:
	  ${2:key1}:
	    ${3:key2}: ${4:value}

snippet .condition
	${1:logical-id}:
	  ${2:intrinsic-fn}

snippet .resource
	${1:logical-id}:
	  Type: ${2:Type}
	  Properties:
	    ${3:Properties}

snippet .output
	${1:logical-id}:
	  Value: TODO
	  Description: TODO
	  Export:
	    Name: TODO

# Functions
snippet .ref
	!Ref ${0:RESOURCE}

snippet .gat
	!GetAtt ${1:TARGET}.${2:ATTR}

snippet .sub
	!Sub ${1:STRING}

snippet .sub+
	!Sub |
	  ${1}

snippet .join
	!Join [ ${1:DELIM}, [ ${2:VALUES} ] ]

snippet .fim
	!FindInMap [ ${1:ELEMENTS} ]

# Condition functions
snippet .==
	!Equals [ ${1:REFERNCE}, ${2:VALUE} ]

snippet .+
	!Not [ Equals [ ${1:REFERENCE}, ${2:VALUE} ] ]

snippet .if
	!If [ ${1:CONDITION}, ${2:TRUE_CASE}, ${3:FALSE_CASE} ]

snippet .&&
	!And [ ${1:CONDITIONS} ]

snippet .||
	!Or [ ${1:CONDITIONS} ]

# Pseudo-parameters
snippet .pseudo-param.account
	AWS::AccountId

snippet .pseudo-param.notification-arns
	AWS::NotificationARNs

snippet .pseudo-param.no-value
	AWS::NoValue

snippet .pseudo-param.partition
	AWS::Partition

snippet .pseudo-param.region
	AWS::Region

snippet .pseudo-param.stack-id
	AWS::StackId

snippet .pseudo-param.stack-name
	AWS::StackName

snippet .pseudo-param.url-suffix
	AWS::URLSuffix

# intrinsic functions
snippet .intrinsic-fn.base-64
	Fn::Base64: !Sub ${1:string}

snippet .intrinsic-fn.equals
	!Equals
	  - ${1:value}
	  - ${2:value}

snippet .intrinsic-fn.if
	!If
	  - ${1:condition-name}
	  - ${2:true-value}
	  - ${3:false-value}]

snippet .intrinsic-fn.not
	!Not
	  - ${1:condition}

snippet .intrinsic-fn.and
	!And
	  - ${1:condition}
	  - ${2:condition}

snippet .intrinsic-fn.or
	!Or
	  - ${1:condition}
	  - ${2:condition}

snippet .intrinsic-fn.find-in-map
	!FindInMap
	  - ${1:MapName}
	  - ${2:Key1}
	  - ${3:Key2}

snippet .intrinsic-fn.get-att
	!GetAtt ${1:resourceName}.${2:attributeName}

snippet .intrinsic-fn.get-azs
	!GetAZs ${1:region}

snippet .intrinsic-fn.import-value
	!ImportValue ${1:stack-output}

snippet .intrinsic-fn.join
	!Join
	  - ${1:delimiter}
	  - - ${2:value1}
	    - ${3:value2}

snippet .intrinsic-fn.select
	!Select
	  - ${1:index}
	  - ${2:list}

snippet .intrinsic-fn.split
	!Split
	  - ${1:delimiter}
	  - ${2:string}

snippet .intrinsic-fn.sub
	!Sub
	  - ${1:string}
	  - ${2:var}: ${3:value}

snippet .intrinsic-fn.ref
	!Ref ${1:Reference}

# Resources - General
snippet .tags
	Tags:
	  - Key: ${1:Key}
	    Value: ${2:Value}

snippet .az
	${AWS::Region}${2:a}

# Resources - IAM
snippet .iam-trusted-role
	${1:logical-name}:
	  Type: AWS::IAM::Role
	  Properties:
	    RoleName: TODO
	    Path: /
	    AssumeRolePolicyDocument:
	      Version: 2012-10-17
	      Statement:
	        - Effect: Allow
	          Principal: TODO
	          Action:
	            - sts:AssumeRole
	    Policies:
	      - PolicyName: TODO
	        PolicyDocument:
	          Version: 2012-10-17
	          Statement:
	            - Sid: TODO
	              Effect: Allow
	              Action:
	                - TODO
	              Resource:
	                - TODO

snippet .iam-policy-statement
	- Sid: TODO
	  Effect: Allow
	  Principal: TODO
	  Action:
	    - TODO
	  Resource:
	    - TODO

# Resources - SQS
snippet .sqs-queue-policy
	${1:logical-name}:
	  Type: AWS::SQS::QueuePolicy
	  Properties:
	    Queues:
	      - TODO
	    PolicyDocument:
	      Id: TODO
	      Version: '2012-10-17'
	      Statement:
	        - Sid: TODO
	          Effect: Allow
	          Principal: TODO
	          Action:
	            - TODO
	          Resource:
	            - TODO
